{"ast":null,"code":"var _jsxFileName = \"/Users/saicharanboddeti/Documents/Guvi.../React/live_news/app/src/components/News_.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NewsItem from './Newsitem';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction News({\n  country,\n  category,\n  pageSize\n}) {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [page] = useState(1);\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=1a2abb4d02d049528d3112e5f45a8ace&page=${page}&pageSize=${pageSize}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(\"Fetched data:\", data);\n        setArticles(data.articles);\n      } catch (error) {\n        console.error(\"Failed to fetch news..\", error);\n      }\n    };\n    fetchNews(); // must be called inside the useEffect\n  }, [country, category, pageSize, page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 text-danger\",\n        children: \"Live Tesla News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: articles.map((article, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(NewsItem, {\n              title: article.title,\n              description: article.description,\n              url: article.urlToImage,\n              linkUrl: article.url,\n              author: article.author,\n              date: article.publishedAt,\n              source: article.source.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(News, \"6789LeEFD4YTjtAv2Hfn37b8Iv4=\");\n_c = News;\nNews.defaultProps = {\n  country: \"in\",\n  pageSize: 6,\n  category: \"general\"\n};\nNews.propTypes = {\n  country: PropTypes.string.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  category: PropTypes.string.isRequired\n};\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useState","useEffect","NewsItem","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","News","country","category","pageSize","_s","articles","setArticles","page","fetchNews","url","response","fetch","data","json","console","log","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","article","index","title","description","urlToImage","linkUrl","author","date","publishedAt","source","name","_c","defaultProps","propTypes","string","isRequired","number","$RefreshReg$"],"sources":["/Users/saicharanboddeti/Documents/Guvi.../React/live_news/app/src/components/News_.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport NewsItem from './Newsitem'\nimport PropTypes from 'prop-types';\n\nfunction News({country, category, pageSize}) \n{\n    const [articles, setArticles] = useState([]);\n    const [page] = useState(1);\n    useEffect(() => \n    {\n        const fetchNews = async () => \n        {\n            try \n            {\n                const url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=1a2abb4d02d049528d3112e5f45a8ace&page=${page}&pageSize=${pageSize}`;\n                const response = await fetch(url);\n                const data = await response.json();\n                console.log(\"Fetched data:\", data); \n                setArticles(data.articles);\n\n            }\n\n            catch(error)\n            {\n                console.error(\"Failed to fetch news..\", error);\n            }\n        }\n\n        fetchNews();  // must be called inside the useEffect\n    }, [country, category, pageSize, page]);\n    \n   return (\n     <>\n        <div className = \"container my-4\">\n            <h2 className = \"text-center mb-4 text-danger\">Live Tesla News</h2>\n            <div className=\"row\">\n                {articles.map((article, index) => \n                {\n                    return (\n                        <div className = \"col-md-4 mb-4\" key = {index}>\n                            <NewsItem \n                                title = {article.title}\n                                description = {article.description}\n                                url = {article.urlToImage}\n                                linkUrl = {article.url}\n                                author = {article.author}\n                                date = {article.publishedAt}\n                                source = {article.source.name}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n            \n     </>\n  )\n}\n\nNews.defaultProps =\n{\n    country : \"in\",\n    pageSize: 6,\n    category: \"general\"\n\n}\n\nNews.propTypes = \n{\n    country:PropTypes.string.isRequired,\n    pageSize:PropTypes.number.isRequired,\n    category:PropTypes.string.isRequired,\n}\n\nexport default News"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}